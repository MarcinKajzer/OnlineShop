@model Shop.ViewModels.ProductDetailsViewModel
@{
    ViewData["Title"] = "Details";
}

<main>
    <div class="single-product-details">
        <div class="product-image">
            <img src="@Model.ImagePath" />
        </div>
        <div class="details">
            <div class="favoutites-links-container">
                @if (User.IsInRole("User"))
                {
                    @if (Model.IsFavourite)
                    {
                        <a class="remove-from-favourites" onclick="removeFromFavourites(@Model.Id, 0)"></a>
                    }
                    else
                    {
                        <a class="add-to-favourites" onclick="addToFavourites(@Model.Id, 0)"></a>
                    }
                }
                else if (User.IsInRole("Administrator"))
                {
                    <a asp-action="Update" asp-controller="Product" asp-route-productId="@Model.Id">Edytuj</a>
                    <span> | </span>
                    <a asp-action="Delete" asp-controller="Product" asp-route-productId="@Model.Id">Usuń</a>
                }
                else
                {
                    <a class="add-to-favourites" asp-action="Login" asp-controller="Account" asp-route-ReturnUrl="/Product/Details?productId=@Model.Id"></a>
                }
            </div>

            <h2>@Model.Name</h2>
            <p>@Model.Description</p>
            <span class="color">Kolor: @Model.Color</span>
            <div class="price-container">
                <div>
                    @if (Model.IsOverpriced)
                    {
                        <span class="current-price">@Model.FormatedNewPrice zł</span>

                        <span class="before-price">@Model.FormatedPrice zł</span>
                    }
                    else
                    {
                        <span class="current-price">@Model.FormatedPrice zł</span>
                    }
                </div>

                @if (Model.IsOverpriced)
                {
                    <span class="discount">- @Model.FormatedDiscount %</span>
                }
            </div>

            @await Html.PartialAsync("_AddToCartPartial", new Shop.ViewModels.AddProductToCartViewModel()
       {
           Id = Model.Id,
           Sizes = Model.Sizes,
           Quantity = Model.Quantity,
           Image = Model.Image,
           Name = Model.Name,
           Price = Model.Price
       })
        </div>
    </div>
</main>

<script src="~/js/add-and-remove-favourite-product.js"></script>