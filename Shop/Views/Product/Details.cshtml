@model Shop.ViewModels.ProductDetailsViewModel
@{
    ViewData["Title"] = "Details";
}

<main>
    <div class="single-product-details">
        <div class="product-image">
            @{
                string imageSrc = "/products-images/" + Model.Image + ".jpg";
            }
            <img src="@imageSrc" />
        </div>
        <div class="details">
            <div class="favoutites-links-container">
                @if (User.Identity.IsAuthenticated)
                {
                    @if (Model.IsFavourite)
                    {
                        <a class="remove-from-favourites" onclick="removeFromFavourites(@Model.Id, 0)"></a>
                    }
                    else
                    {
                        <a class="add-to-favourites" onclick="addToFavourites(@Model.Id, 0)"></a>
                    }
                }
                else
                {
                    ; <a class="add-to-favourites" asp-action="Login" asp-controller="Account" asp-route-ReturnUrl="/Product/Details?productId=@Model.Id"></a>
                }
            </div>
            <a asp-action="Update" asp-controller="Product" asp-route-productId="@Model.Id">Edytuj</a>
            <a asp-action="Delete" asp-controller="Product" asp-route-productId="@Model.Id">Usuń</a>
            <h2>@Model.Name</h2>
            <p>@Model.Description</p>
            <span class="color">Kolor: @Model.Color</span>
            <div class="price-container">
                <div>
                    <span class="current-price">@Model.Price.ToString("0.00") zł</span>
                    @if (Model.IsOverpriced)
                    {
                        string beforePrice = Model.BeforePrice.HasValue ? ((double)(Model.BeforePrice)).ToString("0.00") : "";
                        <span class="before-price">@beforePrice zł</span>
                    }
                </div>

                @if (Model.IsOverpriced)
                {
                    double discount = Model.BeforePrice.HasValue ? (double)(100 - Model.Price / Model.BeforePrice * 100) : 5;
                    <span class="discount">- @discount.ToString("0") %</span>
                }
            </div>

            @await Html.PartialAsync("_AddToCartPartial", new Shop.ViewModels.AddToCartViewModel() { Id = Model.Id, Sizes = Model.Sizes, Quantity = Model.Quantity, Image = Model.Image })
        </div>
    </div>
</main>

<script src="~/js/add-and-remove-favourite-product.js"></script>