@model List<Shop.ViewModels.ProductDetailsViewModel>

@{
    ViewData["Title"] = "GetByCategory";
}

<p class="show-filters-button">Filtruj</p>


@await Html.PartialAsync("_FilterResultsPartial", (Shop.Common.Filters)ViewBag.Filter)

<main class="products-list">
    @if (Model.Count == 0)
    {
        <p class="no-products-info">Nie mamy obecnie żadnego produktu w wybranej kategorii</p>
    }
    else
    {
        foreach (var item in Model)
        {
            <div class="single-product">
                <a class="add-to-favourites"></a>
                <a asp-action="Details" asp-controller="Product" asp-route-productId="@item.Id">

                    <img src="~/assets/product.png" />
                    <div class="price-container">
                        <div>
                            <span class="current-price">@item.Price zł</span>
                            @if (item.IsOverpriced)
                            {
                                <span class="before-price">70,99 zł</span>
                            }
                        </div>
                        @if (item.IsOverpriced)
                        {
                            <span class="discount">100 - @item.BeforePrice/@item.Price} %</span>
                        }

                    </div>
                    <span>@item.Name</span>

                    @await Html.PartialAsync("_AddToCartPartial", new Shop.ViewModels.AddToCartViewModel() { Id = item.Id, Sizes = item.Sizes, Quantity = item.Quantity })

                </a>
            </div>

        }
    }

</main>

<script src="~/js/filters.js"></script>